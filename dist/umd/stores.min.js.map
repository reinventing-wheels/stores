{"version":3,"file":"stores.min.js","sources":["../../src/classes/List.ts","../../src/classes/adapters/LocalStorageAdapter.ts","../../src/classes/stores/ListStore.ts","../../src/classes/stores/MapStore.ts","../../src/classes/stores/SetStore.ts"],"sourcesContent":["export class List<V> extends Array<V> {\n  get size() {\n    return this.length\n  }\n\n  has(value: V) {\n    return this.includes(value)\n  }\n\n  get(index: number): V | undefined {\n    return this[index]\n  }\n\n  set(index: number, value: V) {\n    this[index] = value\n    return this\n  }\n\n  add(value: V) {\n    this.push(value)\n    return this\n  }\n\n  delete(index: number) {\n    return !!this.splice(index, 1).length\n  }\n\n  clear() {\n    this.splice(0)\n  }\n}\n","import { Adapter } from '../../interfaces'\n\nexport class LocalStorageAdapter implements Adapter {\n  constructor(private readonly key: string) {}\n\n  async read(def: any) {\n    const json = localStorage.getItem(this.key)\n    return json ? JSON.parse(json) : def\n  }\n\n  async write(obj: any) {\n    const json = JSON.stringify(obj)\n    localStorage.setItem(this.key, json)\n  }\n}\n","import { Store, Adapter } from '../../interfaces'\nimport { List } from '../List'\n\nexport class ListStore<V = any> extends List<V> implements Store {\n  constructor(private readonly adapter: Adapter) {\n    super()\n  }\n\n  async load() {\n    for (const v of await this.adapter.read([]))\n      this.push(v)\n    return this\n  }\n\n  async save() {\n    await this.adapter.write(this)\n    return this\n  }\n}\n","import { Store, Adapter } from '../../interfaces'\n\nexport class MapStore<K = any, V = any> extends Map<K, V> implements Store {\n  constructor(private readonly adapter: Adapter) {\n    super()\n  }\n\n  async load() {\n    for (const [k, v] of await this.adapter.read([]))\n      this.set(k, v)\n    return this\n  }\n\n  async save() {\n    await this.adapter.write([...this])\n    return this\n  }\n}\n","import { Store, Adapter } from '../../interfaces'\n\nexport class SetStore<V = any> extends Set<V> implements Store {\n  constructor(private readonly adapter: Adapter) {\n    super()\n  }\n\n  async load() {\n    for (const v of await this.adapter.read([]))\n      this.add(v)\n    return this\n  }\n\n  async save() {\n    await this.adapter.write([...this])\n    return this\n  }\n}\n"],"names":["List","Array","size","this","length","[object Object]","value","includes","index","push","splice","key","def","json","localStorage","getItem","JSON","parse","obj","stringify","setItem","adapter","super","v","read","write","Map","k","set","Set","add"],"mappings":"0LAAaA,UAAgBC,MAC3BC,WACE,OAAOC,KAAKC,OAGdC,IAAIC,GACF,OAAOH,KAAKI,SAASD,GAGvBD,IAAIG,GACF,OAAOL,KAAKK,GAGdH,IAAIG,EAAeF,GAEjB,OADAH,KAAKK,GAASF,EACPH,KAGTE,IAAIC,GAEF,OADAH,KAAKM,KAAKH,GACHH,KAGTE,OAAOG,GACL,QAASL,KAAKO,OAAOF,EAAO,GAAGJ,OAGjCC,QACEF,KAAKO,OAAO,gCCzBdL,YAA6BM,GAAAR,SAAAQ,EAE7BN,WAAWO,GACT,MAAMC,EAAOC,aAAaC,QAAQZ,KAAKQ,KACvC,OAAOE,EAAOG,KAAKC,MAAMJ,GAAQD,EAGnCP,YAAYa,GACV,MAAML,EAAOG,KAAKG,UAAUD,GAC5BJ,aAAaM,QAAQjB,KAAKQ,IAAKE,+BCTKb,EACtCK,YAA6BgB,GAC3BC,QAD2BnB,aAAAkB,EAI7BhB,aACE,IAAK,MAAMkB,WAAWpB,KAAKkB,QAAQG,KAAK,IACtCrB,KAAKM,KAAKc,GACZ,OAAOpB,KAGTE,aAEE,aADMF,KAAKkB,QAAQI,MAAMtB,MAClBA,gCCdqCuB,IAC9CrB,YAA6BgB,GAC3BC,QAD2BnB,aAAAkB,EAI7BhB,aACE,IAAK,MAAOsB,EAAGJ,WAAYpB,KAAKkB,QAAQG,KAAK,IAC3CrB,KAAKyB,IAAID,EAAGJ,GACd,OAAOpB,KAGTE,aAEE,aADMF,KAAKkB,QAAQI,MAAM,IAAItB,OACtBA,gCCb4B0B,IACrCxB,YAA6BgB,GAC3BC,QAD2BnB,aAAAkB,EAI7BhB,aACE,IAAK,MAAMkB,WAAWpB,KAAKkB,QAAQG,KAAK,IACtCrB,KAAK2B,IAAIP,GACX,OAAOpB,KAGTE,aAEE,aADMF,KAAKkB,QAAQI,MAAM,IAAItB,OACtBA"}